name: Build and Run Application on Linux (GitHub-hosted runner)

on:
  workflow_dispatch:
    inputs:
      concurrency:
        description: 'Concurrency'  
        required: true
        default: '20'
      workers:
        description: 'Workers'  
        required: true
        default: '["worker_01"]'    

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 40
    env:
      CONNECTION_STRING: MySqlConnectionString
    steps:
      - name: Get ip
        run: echo "LOCAL_IP_ADDRESS=$(ip -o route get to 8.8.8.8 | sed -n 's/.*src \([0-9.]\+\).*/\1/p')" >> $GITHUB_ENV
      - name: Show IP
        run: echo ${{ env.LOCAL_IP_ADDRESS }}
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up MySql
        run: |
          sudo add-apt-repository main
          sudo add-apt-repository universe
          sudo add-apt-repository restricted
          sudo add-apt-repository multiverse
          sudo apt update
          sudo apt install -y mysql-server
          sudo mysql -e "CREATE USER 'testuser'@'localhost' IDENTIFIED BY 'qwerty1'; GRANT ALL PRIVILEGES ON *.* TO testuser@localhost; FLUSH PRIVILEGES;"
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Add DevExpress NuGet Package Source
        continue-on-error: true
        run: dotnet nuget add source ${{ secrets.DEVEXPRESS_NUGET_URL }} -n devexpress-nuget
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Drop database
        continue-on-error: true
        run: sudo mysql -e "DROP DATABASE LoadTestingApp;"
      - name: Update database
        run: dotnet run --project LoadTestingApp.Blazor.Server --updateDatabase --forceUpdate --silent
      - name: Run application
        run: dotnet run --project LoadTestingApp.Blazor.Server &
      - name: Run tests
        uses: aurelien-baudet/workflow-dispatch@v2
        with:
          workflow: Load Testing
          token: ${{ secrets.PERSONAL_TOKEN }}
          wait-for-completion: true
          inputs: '{ "appUrl": "${{ env.LOCAL_IP_ADDRESS }}:5002", "concurrency": "${{ github.event.inputs.concurrency }}", "workers": "${{ github.event.inputs.workers }}" }'